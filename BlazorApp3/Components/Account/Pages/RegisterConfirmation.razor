@page "/Account/RegisterConfirmation"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using BlazorApp3.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Potwierdzenie rejestracji</PageTitle>

<h1>Potwierdzenie rejestracji</h1>

<StatusMessage Message="@statusMessage"/>

@if (emailConfirmationLink is not null)
{
<p>
    Ta aplikacja nie ma obecnie zarejestrowanego prawdziwego nadawcy wiadomości e-mail, zobacz <a href="https://aka.ms/aspaccountconf">te dokumenty</a>, aby dowiedzieć się, jak skonfigurować prawdziwego nadawcę wiadomości e-mail.
    Normalnie ta wiadomość byłaby wysyłana e-mailem: <a href="@emailConfirmationLink">Kliknij tutaj, aby potwierdzić swoje konto</a>
</p>
}
else
{
<p>Proszę sprawdzić swoją skrzynkę pocztową, aby potwierdzić konto.</p>
}

@code {
private string? emailConfirmationLink;
private string? statusMessage;

[CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

[SupplyParameterFromQuery] private string? Email { get; set; }

[SupplyParameterFromQuery] private string? ReturnUrl { get; set; }

protected override async Task OnInitializedAsync()
{
if (Email is null)
{
RedirectManager.RedirectTo("");
}

var user = await UserManager.FindByEmailAsync(Email);
if (user is null)
{
HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
statusMessage = "Błąd podczas znajdowania użytkownika dla nieokreślonego adresu e-mail";
}
else if (EmailSender is IdentityNoOpEmailSender)
{
// Po dodaniu prawdziwego nadawcy wiadomości e-mail, powinieneś usunąć ten kod, który pozwala na potwierdzenie konta
var userId = await UserManager.GetUserIdAsync(user);
var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
}
}
}
